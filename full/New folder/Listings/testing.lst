C51 COMPILER V9.60.0.0   TESTING                                                           01/28/2022 12:30:45 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE TESTING
OBJECT MODULE PLACED IN .\Objects\testing.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE testing.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\t
                    -esting.lst) TABS(2) OBJECT(.\Objects\testing.obj)

line level    source

   1          //CODE of lcd interfacing with 8051 microcontroller
   2          #include<reg51.h>
   3          #include<string.h>
   4          void delay(unsigned int i);
   5          void lcd_cmd(unsigned char a);
   6          void lcd_data(unsigned char b);
   7          void lcd_init(void);
   8          void lcd_str(unsigned char *str);
   9          void sendser_char(unsigned char b);
  10          void sendser_str(unsigned char *str);
  11          void sms_send(void);
  12          void delay_ms(unsigned int i);
  13          void clear(void);
  14          void gsm_link(void);
  15          void keypad(void);
  16          sbit re=P2^0;   //gsm receive
  17          sbit tr=P2^1;   //gsm transmitter
  18          sbit rs=P3^2;
  19          sbit en=P3^3;
  20          sbit m11=P3^4;
  21          sbit m12=P3^5;
  22          sfr ldata=0x90;//port1 
  23          sbit r1=P2^0;
  24          sbit r2=P2^1;
  25          sbit r3=P2^2;
  26          sbit r4=P2^3;
  27          sbit c1=P2^4;
  28          sbit c2=P2^5;
  29          sbit c3=P2^6;
  30          
  31          unsigned char a[60],mesg_rec,pwd[5],p,pas[5];
  32          unsigned int i=0;
  33          unsigned int j,trigg,testing;
  34          void ser_int() interrupt 4
  35          {
  36   1      if(RI==1)
  37   1      {
  38   2      RI=0;
  39   2      a[i]=SBUF;
  40   2      i++;
  41   2      mesg_rec=1;
  42   2      }
  43   1      
  44   1      if(TI==1)
  45   1      {
  46   2      
  47   2      TI=0;
  48   2      }
  49   1      
  50   1      
  51   1      }
  52          void main()
  53          
  54          {
C51 COMPILER V9.60.0.0   TESTING                                                           01/28/2022 12:30:45 PAGE 2   

  55   1        m11=0;
  56   1        m12=0;
  57   1        TMOD=0x20;//timer1 mode2 -auto reload mode
  58   1        TH1=0xfd;//9600 baud rate
  59   1        SCON=0x50;//8bit data ,1start bit,1stop bit
  60   1        IE=0x90;//EA=1,ES=1...
  61   1        TR1=1;
  62   1        trigg=0;
  63   1        
  64   1        lcd_init();
  65   1        lcd_str("   WELCOME TO   ");
  66   1        lcd_cmd(0xc0);
  67   1        lcd_str("   OUR PROJECT   ");
  68   1        delay(65000);
  69   1        lcd_cmd(0x01);
  70   1        lcd_cmd(0x80);
  71   1        lcd_str("   BANK LOCKER    ");
  72   1        lcd_cmd(0xc0);
  73   1        lcd_str("   SECURITY SYSTEM   ");
  74   1        delay(65000);
  75   1        //gsm_link();
  76   1        testing=1;
  77   1        while(testing==1)
  78   1      { 
  79   2        testing=0;
  80   2        lcd_cmd(0x01);
  81   2        lcd_cmd(0x80);
  82   2        lcd_str("   Waiting For    ");
  83   2        lcd_cmd(0xc0);
  84   2        lcd_str("   RFID Tag   ");
  85   2        for(i=0;i<10;i++)
  86   2        {
  87   3        while(RI==0);//suc 1 char recived 
  88   3          RI=0;
  89   3          a[i]=SBUF;//a[0]='1',a[1]='0'
  90   3        }
  91   2        lcd_cmd(0x01);
  92   2        lcd_cmd(0x80);
  93   2        lcd_str("   reading done    ");
  94   2        a[10]='\0';
  95   2        if(0==strcmp("10003B0CA7",a))
  96   2        {
  97   3          lcd_cmd(0x01);
  98   3          lcd_cmd(0x80);
  99   3          lcd_str(" WELCOME USER 1");
 100   3          trigg=1;
 101   3          lcd_cmd(0xc0);
 102   3          lcd_str(a);
 103   3          delay(6500);
 104   3          clear();
 105   3        }
 106   2        else if(0==strcmp("10003B0CAE",a))
 107   2        {
 108   3          lcd_cmd(0x01);
 109   3          lcd_cmd(0x80);
 110   3          lcd_str(" WELCOME USER 2");
 111   3          trigg=1;
 112   3          lcd_cmd(0xc0);
 113   3          lcd_str(a);
 114   3          delay(6500);
 115   3              clear();
 116   3        }
C51 COMPILER V9.60.0.0   TESTING                                                           01/28/2022 12:30:45 PAGE 3   

 117   2        else
 118   2        {
 119   3          lcd_cmd(0x01);
 120   3          lcd_cmd(0x80);
 121   3          lcd_str(" INVALID TAG");
 122   3          lcd_cmd(0xc0);
 123   3          lcd_str(a);
 124   3          delay(6500);
 125   3          clear();
 126   3        }
 127   2        //
 128   2        if (trigg==1)
 129   2        {
 130   3          clear(); //edited
 131   3          sms_send();
 132   3          if(mesg_rec==1)
 133   3        {
 134   4          //+CMT
 135   4          if(a[2]=='+'&&a[3]=='C'&&a[4]=='M'&&a[5]=='T')
 136   4          {
 137   5          j=0;
 138   5          for(i =49 ; i<53;i++)
 139   5          {
 140   6            pas[j]=a[i];
 141   6            j++;
 142   6          }
 143   5          }
 144   4        }
 145   3      
 146   3        lcd_cmd(0x01);
 147   3        lcd_cmd(0x80);
 148   3        lcd_str(" ENTER PASSWORD   ");
 149   3        lcd_cmd(0xc0);
 150   3        for(p=0;p<5;p++)
 151   3        {
 152   4        pwd[p]='\0';
 153   4      
 154   4        }
 155   3        p=0;
 156   3        while(p<4)//"1234\0"
 157   3        {
 158   4        keypad();
 159   4        
 160   4        }
 161   3        pwd[4]='\0'; 
 162   3        if(0==strcmp(pwd,pas))
 163   3          {
 164   4          
 165   4          delay(65000);
 166   4          lcd_cmd(0x01);
 167   4          lcd_cmd(0x80);
 168   4          lcd_str(" ENTERED PASSWORD   ");
 169   4          lcd_cmd(0xc0);
 170   4          lcd_str(" IS CORRECT   ");
 171   4          delay(65000);
 172   4          lcd_cmd(0x01);
 173   4          lcd_cmd(0x80);
 174   4          lcd_str(" LOCKER IS OPENING");
 175   4          lcd_cmd(0xc0);
 176   4          lcd_str("                ");
 177   4          m11=1;
 178   4          m12=0;
C51 COMPILER V9.60.0.0   TESTING                                                           01/28/2022 12:30:45 PAGE 4   

 179   4          delay(65000);     delay(65000);
 180   4          lcd_cmd(0x01);
 181   4          lcd_cmd(0x80);
 182   4          lcd_str(" LOCKER OPENED");
 183   4          lcd_cmd(0xc0);
 184   4          lcd_str("                ");
 185   4          m11=0;
 186   4          m12=0;
 187   4          delay(65000);     delay(65000);
 188   4          lcd_cmd(0x01);
 189   4          lcd_cmd(0x80);
 190   4          lcd_str(" LOCKER CLOSING");
 191   4          lcd_cmd(0xc0);
 192   4          lcd_str("                ");
 193   4          m11=0;
 194   4          m12=1;
 195   4          delay(65000);     delay(65000);     
 196   4          lcd_cmd(0x80);
 197   4          lcd_str(" LOCKER CLOSED");
 198   4          lcd_cmd(0xc0);
 199   4          lcd_str("                ");
 200   4          m11=0;
 201   4          m12=0;
 202   4          }
 203   3          else
 204   3          {
 205   4              
 206   4          lcd_cmd(0x01);
 207   4          lcd_cmd(0x80);
 208   4          lcd_str(" ENTERED PASSWORD   ");
 209   4          lcd_cmd(0xc0);
 210   4          lcd_str(" IS INCORRECT   ");
 211   4          delay(65000);
 212   4          }
 213   3      
 214   3        }
 215   2        
 216   2        
 217   2      }
 218   1      }
 219          
 220          void keypad(void)
 221          {
 222   1      
 223   1      delay(65000);
 224   1          c1=c2=c3=1;
 225   1          r1=r2=r3=r4=0;
 226   1          if(c1==0)//c1 is pressed 
 227   1          {
 228   2            r1=r2=r3=r4=1;
 229   2            c1=c2=c3=0;
 230   2            if(r1==0)//r1 is pressed 
 231   2            {
 232   3            lcd_data('1');pwd[p]='1';p++;  //pwd[0]='1',pwd[1]='2',pwd[2]='3',pwd[3]='4'
 233   3            }
 234   2            if(r2==0)//r2 is pressed 
 235   2            {
 236   3            lcd_data('4');pwd[p]='4';p++; 
 237   3            }
 238   2            if(r3==0)//r1 is pressed 
 239   2            {
 240   3            lcd_data('7');pwd[p]='7';p++; 
C51 COMPILER V9.60.0.0   TESTING                                                           01/28/2022 12:30:45 PAGE 5   

 241   3              }
 242   2            if(r4==0)//r2 is pressed 
 243   2            {
 244   3            lcd_data('*');pwd[p]='*';p++; 
 245   3            }
 246   2          }
 247   1              else if(c2==0)//c1 is pressed 
 248   1          {
 249   2            r1=r2=r3=r4=1;
 250   2            c1=c2=c3=0;
 251   2            if(r1==0)//r1 is pressed 
 252   2            {
 253   3            lcd_data('2');;pwd[p]='2';p++; 
 254   3            }
 255   2            if(r2==0)//r2 is pressed 
 256   2            {
 257   3            lcd_data('5');pwd[p]='5';p++; 
 258   3            }
 259   2            if(r3==0)//r1 is pressed 
 260   2            {
 261   3            lcd_data('8');pwd[p]='8';p++; 
 262   3            }
 263   2            if(r4==0)//r2 is pressed 
 264   2            {
 265   3            lcd_data('0');pwd[p]='0';p++;
 266   3            }       
 267   2          }
 268   1          
 269   1              else if(c3==0)//c1 is pressed 
 270   1          {
 271   2            r1=r2=r3=r4=1;
 272   2            c1=c2=c3=0;
 273   2            if(r1==0)//r1 is pressed 
 274   2            {
 275   3            lcd_data('3');pwd[p]='3';p++;
 276   3            }       
 277   2            if(r2==0)//r2 is pressed 
 278   2            {
 279   3            lcd_data('6');pwd[p]='6';p++; 
 280   3            }
 281   2            if(r3==0)//r1 is pressed 
 282   2            {
 283   3            lcd_data('9');pwd[p]='9';p++; 
 284   3            }
 285   2            if(r4==0)//r2 is pressed 
 286   2            {
 287   3            lcd_data('#');pwd[p]='#';p++; 
 288   3            }
 289   2          }
 290   1      
 291   1      
 292   1      }
 293          void sms_send(void)
 294          {
 295   1        lcd_cmd(0x01);
 296   1        lcd_cmd(0x80);
 297   1        lcd_str(" SMS SENDING");
 298   1        delay_ms(650);
 299   1        sendser_str("AT+CMGS=");
 300   1        sendser_char(0x22);//"
 301   1        sendser_str("+919999999999");
 302   1        sendser_char(0x22);//"
C51 COMPILER V9.60.0.0   TESTING                                                           01/28/2022 12:30:45 PAGE 6   

 303   1        sendser_char(0x0d);
 304   1        /*if(s==0)
 305   1        {
 306   1        sendser_str("BANK LOCKER IS OPENED SUCCESSFULLY");
 307   1        }
 308   1        else
 309   1        {
 310   1          sendser_str("BANK LOCKER IS NOT OPENED ");
 311   1        
 312   1        }*/
 313   1        sendser_char(0x1a);//sms sent
 314   1        lcd_cmd(0x01);
 315   1        lcd_cmd(0x80);
 316   1        lcd_str(" SMS SENT");
 317   1        delay_ms(650);
 318   1      }
 319          void gsm_link(void)
 320          {
 321   1        loop:
 322   1        i=0;
 323   1        sendser_str("AT");
 324   1        sendser_char(0x0d);
 325   1        lcd_cmd(0x01);
 326   1        lcd_cmd(0x80);
 327   1        lcd_str(a);
 328   1        sendser_str(a);
 329   1        if(a[1]=='O'&& a[2]=='K')
 330   1        {
 331   2        lcd_str(" GSM LINK IS UP");
 332   2        
 333   2        }
 334   1        else
 335   1        {
 336   2          lcd_str(" GSM CHECKING");
 337   2          goto loop;
 338   2        }
 339   1        clear();
 340   1        delay_ms(65000);
 341   1        
 342   1        loop1:
 343   1        i=0;
 344   1        sendser_str("AT+CMGF=1");
 345   1        sendser_char(0x0d);
 346   1        lcd_cmd(0x01);
 347   1        lcd_cmd(0x80);
 348   1        if(a[2]=='O'&&a[3]=='K')
 349   1        {
 350   2        lcd_str(" GSM TEXT MODE");
 351   2        
 352   2        }
 353   1        else
 354   1        {
 355   2          lcd_str(" GSM NOT IN TEXT");
 356   2        goto loop1;
 357   2        }
 358   1           clear();
 359   1      delay_ms(650);
 360   1      
 361   1      }
 362          
 363          void lcd_init()
 364          {
C51 COMPILER V9.60.0.0   TESTING                                                           01/28/2022 12:30:45 PAGE 7   

 365   1        lcd_cmd(0x38);
 366   1        lcd_cmd(0x0c);
 367   1        lcd_cmd(0x01);
 368   1        lcd_cmd(0x80);
 369   1      
 370   1      
 371   1      }
 372          void delay(unsigned int i)
 373          {
 374   1      unsigned int j;
 375   1        for(j=0;j<i;j++);
 376   1      }
 377          void delay_ms(unsigned int i)
 378          {
 379   1      unsigned int j,k;
 380   1        for(j=0;j<i;j++)
 381   1        for(k=0;k<1275;k++);
 382   1      }
 383          
 384          void lcd_cmd(unsigned char a)
 385          {
 386   1        rs=0;//cmd 
 387   1        ldata=a;
 388   1        en=1;
 389   1        delay(5);
 390   1        en=0;
 391   1        delay(5);
 392   1      }
 393          void lcd_data(unsigned char b)
 394          {
 395   1        rs=1;//data 
 396   1        ldata=b;
 397   1        en=1;
 398   1        delay(5);
 399   1        en=0;
 400   1        delay(5);
 401   1      }
 402          void lcd_str(unsigned char *str)
 403          {
 404   1      while(*str)
 405   1      {
 406   2        lcd_data(*str++);
 407   2      }
 408   1      
 409   1      }
 410          
 411          
 412          void sendser_char(unsigned char b)
 413          {
 414   1      SBUF=b;
 415   1        while(TI==0);
 416   1        TI=0;
 417   1      }
 418          
 419          
 420          void sendser_str(unsigned char *str)
 421          {
 422   1      while(*str)
 423   1      {
 424   2        sendser_char(*str++);
 425   2      }
 426   1      
C51 COMPILER V9.60.0.0   TESTING                                                           01/28/2022 12:30:45 PAGE 8   

 427   1      }
 428          void clear(void)
 429          {
 430   1      unsigned int i;
 431   1        for(i=0;i<60;i++)
 432   1        {
 433   2        a[i]=0;
 434   2        
 435   2        }
 436   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1518    ----
   CONSTANT SIZE    =    472    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     80       6
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
